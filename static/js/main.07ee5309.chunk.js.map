{"version":3,"sources":["serviceWorker.js","constants.js","store/store.js","store/reducers.js","actions.js","components/ProductInCartPreview.jsx","components/Cart.jsx","components/Menu.jsx","components/Product.jsx","components/SortMenu.jsx","components/Modal.jsx","lib/sortFunction.js","components/ProductPreview.jsx","components/ProductList.jsx","containers.jsx","components/PageTemplate.jsx","components/Home.jsx","components/Catalog.jsx","components/Page404.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","constants","ADD_TO_CART","REMOVE_FROM_CART","CLICK_ON_PRODUCT_PREVIEW","SEARCH_PRODUCT","SORT_PRODUCTS","SORTED_BY_PRICE","SORTED_BY_TITLE","SORTED_BY_WARRANTY","CHANGE_PRODUCT_QUANTITY","CLICK_ON_GO_TO_CART","CLOSE_MODAL","store","applyMiddleware","thunk","createStore","combineReducers","products","state","arguments","length","undefined","action","console","log","selectedProduct","find","product","id","type","C","quantityInCart","Object","toConsumableArray","event","stopPropagation","history","push","concat","target","value","sort","preventDefault","sortBy","modal","isOpen","objectSpread","localStorage","JSON","parse","storeInit","getState","subscribe","stringify","addToCart","dispatch","setTimeout","clickOnProductPreview","ProductInCartPreview","_ref","title","image","quantity","price","onRemoveClick","onProductClick","onChangeQuantity","react_default","a","createElement","className","onClick","src","alt","name","onChange","Cart","_ref$products","_ref$onRemoveClick","f","_ref$onChangeQuantity","totalPrice","filter","reduce","accumulator","currentValue","components_PageTemplate","map","components_ProductInCartPreview","key","productId","e","Menu","badgeQuantity","badgeClasses","classNames","visible","react_router_dom","to","activeClassName","exact","Product","onBuyButtonClick","_products$find","params","description","warranty","manufacturer","options","SortMenu","_ref$sort","_ref$onSelect","onSelect","keys","item","i","href","withRouter","onModalClose","onGoToCartClick","sortFunction","b","components_ProductPreview","CartContainer","connect","removeFromCart","changeQuantity","ProductListContainer","ProductList","ProductContainer","MenuContainer","SortMenuContainer","sortProducts","ModalContainer","clickOnGoToCart","Modal","PageTemplate","children","Home","Catalog","Page404","style","textTransform","pathname","slice","App","es","react_router","path","component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07ee5309.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const constants = {\r\n    ADD_TO_CART: \"ADD_TO_CART\",\r\n    REMOVE_FROM_CART: \"REMOVE_FROM_CART\",\r\n    CLICK_ON_PRODUCT_PREVIEW: \"CLICK_ON_PRODUCT_PREVIEW\",\r\n    SEARCH_PRODUCT: \"SEARCH_PRODUCT\",\r\n    SORT_PRODUCTS: \"SORT_PRODUCTS\",\r\n    SORTED_BY_PRICE: \"SORTED_BY_PRICE\",\r\n    SORTED_BY_TITLE: \"SORTED_BY_TITLE\",\r\n    SORTED_BY_WARRANTY: \"SORTED_BY_WARRANTY\",\r\n    CHANGE_PRODUCT_QUANTITY: \"CHANGE_PRODUCT_QUANTITY\", \r\n    // OPEN_MODAL: \"OPEN_MODAL\",\r\n    // CLICK_ON_PRODUCT_LINK: \"CLICK_ON_PRODUCT_LINK\",\r\n    CLICK_ON_GO_TO_CART: \"CLICK_ON_GO_TO_CART\",\r\n    CLOSE_MODAL: \"CLOSE_MODAL\",\r\n}\r\n\r\nexport default constants","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { products, sort, modal } from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport storeInit from '../products.json'\r\n\r\n// const store = createStore(\r\n//   combineReducers({ products, sort, modal }),\r\n//   (localStorage['redux-store']) ?\r\n//     JSON.parse(localStorage['redux-store']) : \r\n//     storeInit\r\n// )\r\nconst store = applyMiddleware(thunk)(createStore)(\r\n  combineReducers({ products, sort, modal }),\r\n  (localStorage['redux-store']) ? JSON.parse(localStorage['redux-store']) : storeInit\r\n)\r\n\r\nconsole.log(store.getState())\r\n\r\nstore.subscribe(()=>{\r\n  localStorage['redux-store'] = JSON.stringify(store.getState())\r\n})\r\n\r\nexport default store","import C from '../constants'\r\n\r\nexport const products = ( state=[], action ) => {\r\n    console.log(state, action)\r\n    let selectedProduct = state.find(product => product.id === action.id)\r\n    \r\n    switch (action.type) {\r\n        case C.ADD_TO_CART:\r\n            if (selectedProduct.quantityInCart===0) {\r\n                selectedProduct.quantityInCart=1    \r\n                return [...state]\r\n            }\r\n\r\n            return state\r\n            \r\n        case C.REMOVE_FROM_CART:\r\n            action.event.stopPropagation()\r\n            selectedProduct.quantityInCart=0\r\n            return [...state]\r\n\r\n        case C.CLICK_ON_PRODUCT_PREVIEW:\r\n            action.history.push(`/catalog/${action.id}`)\r\n            return [...state]\r\n        \r\n        case C.CHANGE_PRODUCT_QUANTITY:\r\n            selectedProduct.quantityInCart=+action.event.target.value\r\n            return [...state]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sort = ( state='', action ) => {\r\n    console.log(state,action)\r\n    switch (action.type) {\r\n        case C.SORT_PRODUCTS:\r\n            action.event.preventDefault()\r\n            return action.sortBy\r\n        \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const modal = ( state={}, action ) => {\r\n    console.log(state,action)\r\n    switch (action.type) {\r\n        case C.ADD_TO_CART:\r\n            state.id=action.id\r\n            state.isOpen=true\r\n            return {...state}\r\n\r\n        case C.CLOSE_MODAL:\r\n            state.isOpen=false\r\n            state.id=\"undefined\"\r\n            return {...state}\r\n        \r\n        case C.CLICK_ON_GO_TO_CART:\r\n            action.history.push(`/cart`)\r\n            state.isOpen=false\r\n            state.id=\"undefined\"\r\n            return {...state}\r\n\r\n        case C.CLICK_ON_PRODUCT_PREVIEW:\r\n            state.isOpen=false\r\n            state.id=\"undefined\"\r\n            return {...state}\r\n\r\n        // case C.CLICK_ON_PRODUCT_LINK:\r\n        //     action.history.push(`/catalog/${action.id}`)\r\n        //     state.isOpen=false\r\n        //     state.id=\"undefined\"\r\n        //     return {...state}\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","import C from './constants'\r\n\r\nexport const addToCart = (event, id) => (\r\n//  {\r\n//      type: C.ADD_TO_CART,\r\n//      event,\r\n//      id\r\n//  }\r\n    (dispatch) => {\r\n        dispatch({\r\n            type: C.ADD_TO_CART,\r\n            event,\r\n            id\r\n        })\r\n        setTimeout(() =>\r\n            dispatch({ type: C.CLOSE_MODAL }),\r\n            2500\r\n        )\r\n    }\r\n)\r\n\r\nexport const removeFromCart = (event, id) => ({\r\n    type: C.REMOVE_FROM_CART,\r\n    event,\r\n    id\r\n})\r\n\r\nexport const clickOnProductPreview = (history, id) => ({\r\n    type: C.CLICK_ON_PRODUCT_PREVIEW,\r\n    history,\r\n    id\r\n})\r\n\r\nexport const sortProducts = (event, sortBy) => ({\r\n    type: C.SORT_PRODUCTS,\r\n    event,\r\n    sortBy\r\n})\r\n\r\nexport const changeQuantity = (event,id) => ({\r\n    type: C.CHANGE_PRODUCT_QUANTITY,\r\n    event,\r\n    id\r\n})\r\n\r\nexport const closeModal = () => ({\r\n    type: C.CLOSE_MODAL\r\n})\r\n\r\nexport const clickOnGoToCart = (history) => ({\r\n    type: C.CLICK_ON_GO_TO_CART,\r\n    history\r\n})\r\n\r\n// export const clickOnProductLink = (history, id) => ({\r\n//     type: C.CLICK_ON_PRODUCT_LINK,\r\n//     history,\r\n//     id\r\n// })\r\n\r\n// export const openModal = (id) => ({\r\n//     type: C.OPEN_MODAL,\r\n//     id\r\n// })","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n \r\nimport '../styles/ProductInCartPreview.scss'\r\n\r\nconst ProductInCartPreview = ({\r\n    title,\r\n    image,\r\n    // warranty,\r\n    quantity,\r\n    price,\r\n    onRemoveClick,\r\n    onProductClick,\r\n    onChangeQuantity\r\n}) => {\r\n    return (\r\n        <li className=\"cart-item\">\r\n            <div className=\"cart-item__image\" onClick={onProductClick}>\r\n                <img \r\n                    src={image}\r\n                    alt={title}\r\n                />\r\n            </div>\r\n            <span className=\"cart-item__title\">\r\n                <span onClick={onProductClick}>{title}</span>\r\n            </span>\r\n            {/* <span className=\"cart-item__warranty\">Warranty: <strong>{warranty}</strong></span> */}\r\n            <span className=\"cart-item__quantity\">\r\n                <strong><span className=\"sub-title\">Qty: </span><input\r\n                    className=\"cart-item__input\" \r\n                    type=\"number\"\r\n                    name=\"quantity\" \r\n                    id=\"quantityInCart\"\r\n                    value={quantity}\r\n                    onChange={onChangeQuantity}\r\n                /> pc.</strong></span>\r\n            <span className=\"cart-item__quantity\"><strong><span className=\"sub-title\">Price: </span>{quantity*price} $</strong></span>\r\n            <button \r\n                className=\"button secondary\"\r\n                onClick={onRemoveClick}\r\n            >Remove</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nProductInCartPreview.propTypes = {\r\n    title: PropTypes.string,\r\n    image: PropTypes.string,\r\n    // warranty: PropTypes.number,\r\n    quantity: PropTypes.number,\r\n    price: PropTypes.number,\r\n    onRemoveClick: PropTypes.func,\r\n    onProductClick: PropTypes.func,\r\n    onChangeQuantity: PropTypes.func,\r\n}\r\n\r\nexport default ProductInCartPreview","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PageTemplate from './PageTemplate'\r\nimport ProductInCartPreview from './ProductInCartPreview'\r\nimport '../styles/Cart.scss'\r\n\r\nconst Cart = ({\r\n    history,\r\n    onProductClick,\r\n    products=[],\r\n    onRemoveClick=f=>f,\r\n    onChangeQuantity=f=>f\r\n}) => {\r\n    let totalPrice = products.filter( product => product.quantityInCart > 0 ).reduce(\r\n        ( accumulator, currentValue ) => +accumulator + ( currentValue.price * currentValue.quantityInCart ), 0\r\n    )\r\n\r\n    return (\r\n        <PageTemplate>\r\n            <div className=\"cart\">\r\n                <h1>Cart</h1>\r\n                <h2>Products in your cart</h2>\r\n                <ul className=\"cart-list\">\r\n                    { products.filter( product => product.quantityInCart > 0 ).map(product =>\r\n                        <ProductInCartPreview\r\n                            key={product.id}\r\n                            productId={product.id}\r\n                            image={product.image}\r\n                            title={product.title}\r\n                            // warranty={product.warranty}\r\n                            quantity={product.quantityInCart}\r\n                            price={product.price}\r\n                            onRemoveClick={(e)=>onRemoveClick(e,product.id)}\r\n                            onProductClick={()=>onProductClick(history, product.id)}\r\n                            onChangeQuantity={(e)=>onChangeQuantity(e, product.id)}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                <h3>{totalPrice > 0 ? `Total price: ${totalPrice} $` : 'No products in cart' }</h3>\r\n            </div> \r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nCart.propTypes = {\r\n    history: PropTypes.object,\r\n    products: PropTypes.array,\r\n    onProductClick: PropTypes.func,\r\n    onRemoveClick: PropTypes.func,\r\n    onChangeQuantity: PropTypes.func\r\n}\r\n\r\nexport default Cart","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport '../styles/Menu.scss'\r\n\r\nconst Menu = ({\r\n    products\r\n}) => {\r\n    let badgeQuantity = products.filter( product => product.quantityInCart > 0 ).reduce(\r\n        (accumulator,currentValue) => +accumulator + currentValue.quantityInCart, 0 \r\n    )\r\n\r\n    let badgeClasses = classNames(\r\n        'nav__quantity', \r\n        {visible: products.filter( product => product.quantityInCart > 0 ).length > 0}\r\n    )\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            <NavLink \r\n                to=\"/\" \r\n                className=\"nav__link\" \r\n                activeClassName=\"is-active\" \r\n                exact={true}\r\n            >Home</NavLink>\r\n\r\n            <NavLink \r\n                to=\"/catalog\" \r\n                className=\"nav__link\" \r\n                activeClassName=\"is-active\" \r\n                exact={true}\r\n            >Catalog</NavLink>\r\n            \r\n            <NavLink \r\n                to=\"/cart\" \r\n                className=\"nav__link\" \r\n                activeClassName=\"is-active\" \r\n                exact={true}\r\n            >Cart<span className={badgeClasses}>{badgeQuantity}</span>\r\n            </NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nMenu.propTypes = {\r\n    products: PropTypes.array\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PageTemplate from './PageTemplate'\r\n\r\nimport '../styles/Product.scss'\r\n\r\nconst Product = ({\r\n    match,\r\n    products,\r\n    onBuyButtonClick\r\n}) => {\r\n    let {\r\n        id,\r\n        image,\r\n        title,\r\n        description,\r\n        warranty,\r\n        price,\r\n        manufacturer\r\n    } = products.find( product => product.id === match.params.productId )\r\n    \r\n    return (\r\n        <PageTemplate>\r\n            <div className=\"product container wrap\">\r\n                <img \r\n                    className=\"product-image\" \r\n                    src={image} \r\n                    alt={title}\r\n                />                \r\n                <div className=\"product-info\">\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                    <p><strong>Warranty: {warranty} month</strong></p>\r\n                    <p><strong>By {manufacturer}</strong></p>\r\n                    <p><strong>Price: {price} $</strong></p>\r\n                    <button \r\n                        className=\"button primary\"\r\n                        onClick={(event) => onBuyButtonClick(event, id)}\r\n                    >Buy</button>\r\n                </div>\r\n            </div>  \r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nProduct.propTypes = {\r\n    match: PropTypes.object,\r\n    products: PropTypes.array,\r\n    onBuyButtonClick: PropTypes.func\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport C from '../constants'\r\nimport '../styles/SortMenu.scss'\r\n\r\nconst options = {\r\n    price: C.SORTED_BY_PRICE,\r\n    title: C.SORTED_BY_TITLE,\r\n    warranty: C.SORTED_BY_WARRANTY\r\n}\r\n\r\nconst SortMenu = ({ \r\n    sort=C.SORTED_BY_PRICE, \r\n    onSelect=f=>f\r\n}) => {\r\n    return (\r\n        <div className=\"sort-menu\">\r\n            <h3 className=\"sort-menu__header\">Sort by: </h3>\r\n            <nav className=\"sort-menu__list\">\r\n                {Object.keys(options).map((item, i) =>\r\n                    <a key={i}\r\n                    href=\"#\"\r\n                    className={(sort === options[item]) ? \"sort-menu__item selected\" : \"sort-menu__item\"}\r\n                    onClick={event=>onSelect(event, options[item])}>{item}</a>\r\n                )}\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nSortMenu.propTypes = {\r\n    sort: PropTypes.string,\r\n    onSelect: PropTypes.func\r\n}\r\n\r\nexport default SortMenu","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport '../styles/Modal.scss'\r\n\r\nconst Modal = ({\r\n    modal,\r\n    products,\r\n    onModalClose,\r\n    onGoToCartClick,\r\n    onProductClick,\r\n    history\r\n}) => {\r\n    let title = ''\r\n    \r\n    if (modal.isOpen) {\r\n        title = products.find( product => product.id === modal.id ).title\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={modal.isOpen?`modal is-open`:`modal is-close`}>\r\n            <div className=\"modal__overlay\" onClick={onModalClose}></div>\r\n            <div className=\"modal__content\">\r\n                <h3>\r\n                    <span\r\n                        className=\"modal__link modal__link_name\"\r\n                        onClick={()=>onProductClick(history,modal.id)}\r\n                    >\r\n                    {title}</span><br/>is already in <span\r\n                        className=\"modal__link\"\r\n                        onClick={()=>onGoToCartClick(history)}\r\n                    > cart</span>\r\n                </h3>\r\n                <div \r\n                    className=\"modal__button modal__button_close\"\r\n                    onClick={onModalClose}\r\n                >&times;</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    modal: PropTypes.object,\r\n    products: PropTypes.array,\r\n    history: PropTypes.object,\r\n    onModalClose: PropTypes.func,\r\n    onGoToCartClick: PropTypes.func,\r\n    onProductClick: PropTypes.func,\r\n}\r\n\r\nexport default withRouter(Modal)\r\n","import C from '../constants'\r\n\r\nconst sortFunction = (sort,products) => {\r\n    switch (sort) {\r\n        case C.SORTED_BY_PRICE:\r\n            return [...products].sort((a,b)=>{\r\n                return a.price - b.price\r\n            })\r\n            \r\n        case C.SORTED_BY_TITLE:\r\n            return [...products].sort((a,b)=>{\r\n                return a.title > b.title? 1: -1\r\n            })\r\n        \r\n        case C.SORTED_BY_WARRANTY:\r\n            return [...products].sort((a,b)=>{\r\n                return b.warranty - a.warranty\r\n            })\r\n\r\n        default:\r\n            return products\r\n    }\r\n}\r\n\r\nexport default sortFunction","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport '../styles/ProductPreview.scss'\r\n\r\nconst ProductPreview = ({\r\n    title,\r\n    image,\r\n    description,\r\n    warranty,\r\n    price,\r\n    manufacturer,\r\n    onBuyButtonClick,\r\n    onProductClick,\r\n}) => {    \r\n    return (\r\n        <li className=\"card preview\">\r\n            <img \r\n                className=\"card-image\" \r\n                src={image}\r\n                alt={title} \r\n                onClick={onProductClick}\r\n            />\r\n            <div className=\"card-info\">\r\n                <h3 className=\"card-title\" onClick={onProductClick}>{title}</h3>\r\n                <p className=\"card-description\">{description}</p>\r\n                <p className=\"card-properties\"><strong>Warranty: {warranty} month</strong></p>\r\n                <p className=\"card-properties\"><strong>Price: {price} $</strong></p>\r\n                <p className=\"card-properties\"><strong>By {manufacturer}</strong></p>\r\n                <button \r\n                    className=\"button primary\"\r\n                    onClick={onBuyButtonClick}\r\n                >Buy</button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nProductPreview.propTypes = {\r\n    title: PropTypes.string,\r\n    image: PropTypes.string,\r\n    description: PropTypes.string,\r\n    warranty: PropTypes.number,\r\n    price: PropTypes.number,\r\n    manufacturer: PropTypes.string,\r\n    onBuyButtonClick: PropTypes.func,\r\n    onProductClick: PropTypes.func,\r\n    history: PropTypes.object,\r\n}\r\n\r\nexport default withRouter(ProductPreview)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\nimport sortFunction from '../lib/sortFunction'\r\n\r\nimport ProductPreview from './ProductPreview'\r\nimport '../styles/ProductList.scss'\r\n\r\nconst ProductList = ({ \r\n    products,\r\n    sort,\r\n    history,\r\n    onBuyButtonClick,\r\n    onProductClick,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h2>Product list</h2>\r\n                <ul className=\"product-list container wrap\">\r\n                    {\r\n                        sortFunction(sort,products).map(product =>\r\n                            <ProductPreview\r\n                                key={product.id}\r\n                                title={product.title}\r\n                                image={product.image}\r\n                                description={product.description}\r\n                                warranty={product.warranty}\r\n                                price={product.price}\r\n                                manufacturer={product.manufacturer}\r\n                                onBuyButtonClick={(e)=>onBuyButtonClick(e,product.id)}\r\n                                // onProductClick={()=>history.push(`/catalog/${product.id}`)}\r\n                                onProductClick={()=>onProductClick(history,product.id)}\r\n                            />\r\n                        )\r\n                    }\r\n                </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nProductList.propTypes = {\r\n    sort: PropTypes.string,\r\n    products: PropTypes.array,\r\n    history: PropTypes.object,\r\n    onBuyButtonClick: PropTypes.func,\r\n    onProductClick: PropTypes.func\r\n}\r\n\r\nexport default withRouter( ProductList )","import { connect } from 'react-redux'\r\nimport { \r\n    addToCart, \r\n    removeFromCart, \r\n    clickOnProductPreview,\r\n    sortProducts,\r\n    changeQuantity,\r\n    closeModal,\r\n    clickOnGoToCart,\r\n    // clickOnProductLink\r\n} from './actions'\r\n\r\nimport Cart from './components/Cart'\r\nimport Menu from './components/Menu'\r\nimport Product from './components/Product'\r\nimport SortMenu from './components/SortMenu'\r\nimport Modal from './components/Modal'\r\nimport ProductList from './components/ProductList';\r\n\r\nexport const CartContainer = connect(\r\n    state => ({\r\n        products: state.products\r\n    }),\r\n    dispatch => ({\r\n        onRemoveClick(e,id) {\r\n            dispatch(removeFromCart(e,id))\r\n        },\r\n        onProductClick(history, id) {\r\n            dispatch(clickOnProductPreview(history, id))\r\n        },\r\n        onChangeQuantity(e,id) {\r\n            dispatch(changeQuantity(e,id))\r\n        }\r\n    })\r\n)(Cart)\r\n\r\nexport const ProductListContainer = connect(\r\n    state => ({\r\n        products: state.products,\r\n        sort: state.sort,\r\n    }),\r\n    dispatch => ({\r\n        onBuyButtonClick(e,id) {\r\n            dispatch(addToCart(e,id))\r\n        },\r\n        onProductClick(history, id) {\r\n            dispatch(clickOnProductPreview(history, id))\r\n        }\r\n    })\r\n)(ProductList)\r\n\r\nexport const ProductContainer = connect(\r\n    state => ({\r\n        products: state.products\r\n    }),\r\n    dispatch => ({\r\n        onBuyButtonClick(e,id) {\r\n            dispatch(addToCart(e,id))\r\n        }\r\n    })\r\n)(Product)\r\n\r\nexport const MenuContainer = connect(\r\n    state => ({\r\n        products: state.products\r\n    })\r\n)(Menu)\r\n\r\nexport const SortMenuContainer = connect(\r\n    state => ({\r\n        sort: state.sort\r\n    }),\r\n    dispatch => ({\r\n        onSelect(e,sortBy) {\r\n            dispatch(sortProducts(e,sortBy))\r\n        }\r\n    })\r\n)(SortMenu)\r\n\r\nexport const ModalContainer = connect(\r\n    state => ({\r\n        modal: state.modal,\r\n        products: state.products\r\n    }),\r\n    dispatch => ({\r\n        onModalClose() {\r\n            dispatch(closeModal())\r\n        },\r\n        onProductClick(history, id) {\r\n            dispatch(clickOnProductPreview(history, id))\r\n        },\r\n        // onProductLinkClick(history, id) {\r\n        //     dispatch(clickOnProductLink(history, id))\r\n        // },\r\n        onGoToCartClick(history) {\r\n            dispatch(clickOnGoToCart(history))\r\n        }\r\n    })\r\n)(Modal)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { MenuContainer } from '../containers'\r\n\r\nimport '../styles/PageTemplate.scss';\r\n\r\nconst PageTemplate = ({children}) => {\r\n    return (\r\n        <div className=\"page-template\">\r\n            <MenuContainer/>\r\n            <div className=\"content\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPageTemplate.propTypes = {\r\n    children: PropTypes.element\r\n}\r\n\r\nexport default PageTemplate","import React from 'react'\r\nimport PageTemplate from './PageTemplate'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <div className=\"home\">\r\n                <h1>This is test case - simple online shop</h1>\r\n                <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\r\n                <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.</p>\r\n                <p>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</p>\r\n            </div>  \r\n        </PageTemplate>        \r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PageTemplate from './PageTemplate'\r\n// import ProductSearch from './ProductSearch'\r\n// import ProductList from './ProductList'\r\nimport { \r\n    SortMenuContainer,\r\n    ProductListContainer\r\n} from '../containers'\r\n\r\nconst Catalog = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <div>\r\n                <h1>Catalog</h1>\r\n                {/* <ProductSearch\r\n                    onChange={onSearch}\r\n                /> */}\r\n                <SortMenuContainer/>\r\n                <ProductListContainer\r\n                    // products={products}\r\n                    // sort={sort}\r\n                    // onBuyButtonClick={onBuyButtonClick}\r\n                    // onProductClick={onProductClick}\r\n                />\r\n            </div>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nCatalog.propTypes = {\r\n    productList: PropTypes.array,\r\n    sort: PropTypes.string,\r\n    // onSearch: PropTypes.func,\r\n    onBuyButtonClick: PropTypes.func,\r\n    onProductClick: PropTypes.func\r\n}\r\n\r\nexport default Catalog","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PageTemplate from './PageTemplate'\r\n\r\nconst Page404 = ({\r\n    location\r\n}) => {\r\n    let style = {\r\n        textTransform: 'uppercase'\r\n    }\r\n    return (\r\n        <PageTemplate>\r\n            <div className=\"page-404\">\r\n                <h1>\r\n                    Page <span style={style}>{location.pathname.slice(1)}</span> not found!\r\n                </h1>\r\n            </div>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nPage404.propTypes = {\r\n    location: PropTypes.object\r\n}\r\n\r\nexport default Page404\r\n","import React from 'react'\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nimport Home from './components/Home'\nimport { \n  CartContainer, \n  ModalContainer, \n  ProductContainer \n} from './containers'\nimport Catalog from './components/Catalog'\nimport Page404 from './components/Page404'\nimport './styles/common/common.scss'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <div className=\"app\">\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/catalog\" component={Catalog}></Route>\n            <Route path=\"/catalog/:productId\" component={ProductContainer}></Route>\n            <Route path=\"/cart\" component={CartContainer}></Route>\n            <Route component={Page404}></Route>\n            \n            {/* TODO: Перенести фильтр из состояния в роутер */}\n            {/* <Route exact path=\"/catalog\" component={()=>(\n              <Switch>\n                <Route path=\"/catalog\" component={CatalogContainer}></Route>\n                <Route path=\"/catalog/sort/:sort\" component={CatalogContainer}></Route>\n              </Switch>\n            )} /> */}\n          </Switch>\n          <ModalContainer/>\n        </div>\n      </HashRouter>\n    </Provider>\n  )    \n}\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props)\n\n    // this.state = {\n      // products: productsBase,\n      // products: [],\n      // productPage: {},\n      // displayedProducts: productsBase\n    // }\n\n    // this.handleCatalogSearch = this.handleCatalogSearch.bind(this)\n    // this.handleBuyButtonClick = this.handleBuyButtonClick.bind(this)\n    // this.handleProductClick = this.handleProductClick.bind(this)\n    // this.handleRemoveFromCartClick = this.handleRemoveFromCartClick.bind(this)\n  // }\n\n  // handleCatalogSearch(event) {\n  //   let searchQuery = event.target.value.toLowerCase();\n  //   let displayedProducts = this.state.products.filter(function(element) {\n  //       let searchValue = element.title.toLowerCase() + element.description.toLowerCase()\n  //       return searchValue.indexOf(searchQuery) !== -1\n  //   })\n\n  //   this.setState({\n  //       displayedProducts: displayedProducts\n  //   })\n  // }\n\n  // handleBuyButtonClick(event,productId) {\n  //   event.stopPropagation()\n\n  //   let products = this.state.products\n\n  //   products.find(product => product.id === productId).inCart = true\n\n  //   this.setState({ products: products })\n  // }\n\n  // handleProductClick(history,productId) {\n  //   let products = this.state.products\n\n  //   this.setState({\n  //     productPage: products.find(product => product.id === productId)\n  //   })\n  \n  //   history.push(`/catalog/${productId}`)\n  // }\n\n  // handleRemoveFromCartClick(productId) {\n  //   let products = this.state.products\n\n  //   products.find(product => product.id === productId).inCart = false\n\n  //   this.setState({\n  //     products: products\n  //   })      \n  // }\n\n  // componentDidMount() {\n  //   let products = JSON.parse(localStorage.getItem('products'))\n    \n  //   if (products) {\n  //     this.setState({ products: products, displayedProducts: products })\n  //   } else {\n  //     this.setState({ products: productsBase, displayedProducts: productsBase })\n  //   }\n  // }\n\n  // componentDidUpdate() {\n  //     this._updateLocalStorage()\n  // }\n\n  // _updateLocalStorage() {\n  //   let products = JSON.stringify(this.state.products)\n  //   localStorage.setItem('products', products)\n  // }\n\n  // render() {\n    // const catalogProps = {\n      // productList: this.state.displayedProducts,\n      // onSearch: this.handleCatalogSearch,\n      // onBuyButtonClick: this.handleBuyButtonClick,\n      // onProductClick: this.handleProductClick\n    // }\n\n    // const cartProps = {\n      // products: this.state.products.filter(product=>product.inCart===true),\n      // onRemoveClick: this.handleRemoveFromCartClick\n    // }\n\n    // const productProps = {\n      // product: this.state.productPage,\n      // onBuyButtonClick: this.handleBuyButtonClick\n    // }\n\n//     return (\n//       <Provider store={store}>\n//         <HashRouter>\n//           <div className=\"app\">\n//             <Switch>\n//               <Route exact path='/' component={Home}></Route>\n//               {/* <Route \n//                 exact \n//                 path='/catalog' \n//                 render={()=><Catalog {...catalogProps}/>}\n//               ></Route>     */}\n//               <Route exact path='/catalog' component={CatalogContainer}></Route>\n//               <Route path='/catalog/:productId' component={ProductContainer}></Route>\n//               {/* <Route \n//                 path='/catalog/:productId' \n//                 render={()=><Product {...productProps}/>}\n//               ></Route> */}\n//               {/* <Route \n//                 path='/cart'\n//                 render={()=><Cart {...cartProps}/>}  \n//               ></Route> */}\n//               <Route path=\"/cart\" component={CartContainer}></Route>\n//               <Route component={Page404}></Route>\n//             </Switch>\n//           </div>\n//         </HashRouter>\n//       </Provider>\n//     )\n//   }\n// }\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}